{"version":3,"file":"react-tooltip.min.mjs","sources":["../src/utils/debounce.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx","../src/utils/use-isomorphic-layout-effect.ts","../src/utils/compute-positions.ts","../src/components/Tooltip/Tooltip.tsx","../src/components/TooltipContent/TooltipContent.tsx","../src/components/TooltipController/TooltipController.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnScroll) {\n      window.addEventListener('scroll', debouncedHandleHideTooltip)\n    }\n    if (closeOnResize) {\n      window.addEventListener('resize', debouncedHandleHideTooltip)\n    }\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (closeOnScroll) {\n        window.removeEventListener('scroll', debouncedHandleHideTooltip)\n      }\n      if (closeOnResize) {\n        window.removeEventListener('resize', debouncedHandleHideTooltip)\n      }\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              if (tooltipShowDelayTimerRef.current) {\n                clearTimeout(tooltipShowDelayTimerRef.current)\n              }\n              if (tooltipHideDelayTimerRef.current) {\n                clearTimeout(tooltipHideDelayTimerRef.current)\n              }\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    closeOnScroll,\n    closeOnResize,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],"names":["debounce","func","wait","immediate","timeout","args","later","apply","this","setTimeout","clearTimeout","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","TooltipContext","createContext","getTooltipData","TooltipProvider","children","anchorRefMap","setAnchorRefMap","useState","activeAnchorMap","setActiveAnchorMap","tooltipId","refs","oldMap","tooltipRefs","_a","forEach","ref","add","delete","useCallback","_b","context","useMemo","React","createElement","Provider","value","useTooltip","useContext","TooltipWrapper","className","place","content","html","variant","offset","wrapper","events","positionStrategy","delayShow","delayHide","anchorRef","useRef","useEffect","classNames","useIsomorphicLayoutEffect","window","useLayoutEffect","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","offsetValue","strategy","middlewares","Number","flip","shift","padding","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","right","bottom","split","Tooltip","id","classNameArrow","anchorId","anchorSelect","openOnClick","WrapperElement","float","hidden","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","style","externalStyles","position","afterShow","afterHide","contentWrapperRef","isOpen","setIsOpen","tooltipRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","actualPlacement","setActualPlacement","inlineStyles","setInlineStyles","inlineArrowStyles","setInlineArrowStyles","show","setShow","rendered","setRendered","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","handleShow","undefined","handleHideTooltipDelayed","delay","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","getBoundingClientRect","width","height","computedStylesData","Object","keys","length","handleMouseMove","mouseEvent","mousePosition","clientX","clientY","handleClickTooltipAnchor","handleClickOutsideAnchors","document","querySelector","some","anchor","contains","handleEsc","key","debouncedHandleShowTooltip","debouncedHandleHideTooltip","elementRefs","anchorById","addEventListener","enabledEvents","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","documentObserver","MutationObserver","mutationList","newAnchors","mutation","type","attributeName","getAttribute","removedNodes","node","call","elements","addedNodes","filter","nodeType","matches","flatMap","querySelectorAll","anchors","observe","body","childList","subtree","attributes","attributeFilter","disconnect","updateTooltipPosition","contentObserver","ResizeObserver","Array","from","canShow","role","TooltipContent","dangerouslySetInnerHTML","__html","TooltipController","render","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","replace","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","entries","console","warn","size","anchorElement","observer","observerConfig","renderedContent","props"],"mappings":"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"}